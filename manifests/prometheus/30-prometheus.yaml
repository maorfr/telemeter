apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  labels:
    prometheus: telemeter
  name: telemeter
  namespace: telemeter
spec:
  baseImage: quay.io/prometheus/prometheus
  containers:
  - args:
    - -provider=openshift
    - -https-address=:9091
    - -http-address=
    - -email-domain=*
    - -upstream=http://localhost:9090
    - -openshift-service-account=prometheus-telemeter
    - '-openshift-sar={"resource": "namespaces", "verb": "get"}'
    - '-openshift-delegate-urls={"/": {"resource": "namespaces", "verb": "get"}}'
    - -tls-cert=/etc/tls/private/tls.crt
    - -tls-key=/etc/tls/private/tls.key
    - -client-secret-file=/var/run/secrets/kubernetes.io/serviceaccount/token
    - -cookie-secret-file=/etc/proxy/secrets/session_secret
    - -openshift-ca=/etc/pki/tls/cert.pem
    - -openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    - -skip-auth-regex=^/metrics
    image: openshift/oauth-proxy:v1.1.0
    name: prometheus-proxy
    ports:
    - containerPort: 9091
      name: https
    resources: {}
    volumeMounts:
    - mountPath: /etc/tls/private
      name: secret-prometheus-telemeter-tls
    - mountPath: /etc/proxy/secrets
      name: secret-prometheus-telemeter-proxy
  listenLocal: true
  nodeSelector:
    beta.kubernetes.io/os: linux
  replicas: 2
  resources:
    limits: {}
    requests:
      memory: 400Mi
  retention: 15d
  ruleSelector:
    matchLabels:
      prometheus: telemeter
      role: alert-rules
  secrets:
  - prometheus-telemeter-tls
  - prometheus-telemeter-proxy
  securityContext: {}
  serviceAccountName: prometheus-telemeter
  serviceMonitorSelector:
    matchLabels:
      endpoint: federate
      k8s-app: telemeter-server
  storage:
    volumeClaimTemplate:
      apiVersion: v1
      kind: PersistentVolumeClaim
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 500Gi
        storageClassName: gp2-encrypted
  version: v2.3.2
